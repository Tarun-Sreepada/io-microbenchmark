--------------------------------------------------------------------------------
Profile data file 'callgrind.out.1731990702' (creator: callgrind-3.22.0)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 4440470
Trigger: Program termination
Profiled target:  ./build/io_benchmark --location=/dev/nvme0n1 --queue_depth=1 --io=100000 --method=seq --threads=1 --type=write -y --sync (PID 1270390, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                  
--------------------------------------------------------------------------------
14,341,793 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                  file:function
--------------------------------------------------------------------------------
3,200,062 (22.31%)  src/sync.cpp:io_benchmark_thread_sync(benchmark_params&, thread_stats&, unsigned long) [/home/tarun/io-microbenchmark/build/io_benchmark]
2,700,000 (18.83%)  ./posix/../sysdeps/unix/sysv/linux/pwrite64.c:pwrite [/usr/lib/x86_64-linux-gnu/libc.so.6]
1,600,160 (11.16%)  ./nptl/./nptl/cancellation.c:__pthread_enable_asynccancel [/usr/lib/x86_64-linux-gnu/libc.so.6]
1,500,150 (10.46%)  ./nptl/./nptl/cancellation.c:__pthread_disable_asynccancel [/usr/lib/x86_64-linux-gnu/libc.so.6]
  800,045 ( 5.58%)  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:__memset_avx2_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
  800,024 ( 5.58%)  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:__memset_chk_avx2_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
  510,848 ( 3.56%)  ./elf/./elf/dl-lookup.c:do_lookup_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  500,854 ( 3.49%)  ./elf/../sysdeps/generic/dl-new-hash.h:_dl_lookup_symbol_x
  500,005 ( 3.49%)  /usr/include/c++/13/bits/char_traits.h:io_benchmark_thread_sync(benchmark_params&, thread_stats&, unsigned long)
  450,005 ( 3.14%)  /usr/include/c++/13/bits/stl_algo.h:main
  200,020 ( 1.39%)  ./nptl/../nptl/descr.h:__pthread_enable_asynccancel
  200,003 ( 1.39%)  /usr/include/c++/13/bits/basic_string.h:io_benchmark_thread_sync(benchmark_params&, thread_stats&, unsigned long)
  200,000 ( 1.39%)  ???:0x000000000010b4c0 [???]
  189,729 ( 1.32%)  ./elf/./elf/dl-lookup.c:_dl_lookup_symbol_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  175,027 ( 1.22%)  /usr/include/c++/13/bits/stl_numeric.h:main
  148,499 ( 1.04%)  ./elf/./elf/dl-reloc.c:_dl_relocate_object [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  115,827 ( 0.81%)  ./elf/./elf/dl-lookup.c:check_match [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  112,481 ( 0.78%)  ./elf/../sysdeps/x86_64/dl-machine.h:_dl_relocate_object
  111,491 ( 0.78%)  ./elf/./elf/do-rel.h:_dl_relocate_object
   72,333 ( 0.50%)  ./string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:strcmp [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
   43,380 ( 0.30%)  ./elf/./elf/dl-tunables.c:__GI___tunables_init [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
   17,196 ( 0.12%)  ./elf/./elf/dl-version.c:_dl_check_map_versions [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
   12,192 ( 0.09%)  ???:std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
   10,523 ( 0.07%)  ./elf/../sysdeps/generic/ldsodefs.h:_dl_relocate_object
    9,705 ( 0.07%)  ./elf/../sysdeps/generic/ldsodefs.h:do_lookup_x
    9,216 ( 0.06%)  ./wcsmbs/./wcsmbs/btowc.c:btowc [/usr/lib/x86_64-linux-gnu/libc.so.6]
    8,691 ( 0.06%)  ./elf/./elf/dl-runtime.c:_dl_fixup [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/13/bits/char_traits.h
--------------------------------------------------------------------------------
Ir               

-- line 350 ----------------------------------------
      .                 static _GLIBCXX17_CONSTEXPR void
      .                 assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      .                 {
      .           #if __cpp_constexpr_dynamic_alloc
      .           	if (std::__is_constant_evaluated())
      .           	  std::construct_at(__builtin_addressof(__c1), __c2);
      .           	else
      .           #endif
     11 ( 0.00%)  	__c1 = __c2;
      2 ( 0.00%)        }
      .           
      .                 static _GLIBCXX_CONSTEXPR bool
      .                 eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      .                 { return __c1 == __c2; }
      .           
      .                 static _GLIBCXX_CONSTEXPR bool
      .                 lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      .                 {
-- line 367 ----------------------------------------
-- line 381 ----------------------------------------
      .           	    for (size_t __i = 0; __i < __n; ++__i)
      .           	      if (lt(__s1[__i], __s2[__i]))
      .           		return -1;
      .           	      else if (lt(__s2[__i], __s1[__i]))
      .           		return 1;
      .           	    return 0;
      .           	  }
      .           #endif
500,015 ( 3.49%)  	return __builtin_memcmp(__s1, __s2, __n);
      .                 }
      .           
      .                 static _GLIBCXX17_CONSTEXPR size_t
      .                 length(const char_type* __s)
      .                 {
      .           #if __cplusplus >= 201703L
      .           	if (std::__is_constant_evaluated())
      .           	  return __gnu_cxx::char_traits<char_type>::length(__s);
      .           #endif
     18 ( 0.00%)  	return __builtin_strlen(__s);
     96 ( 0.00%)  => ???:0x000000000010b510 (6x)
      .                 }
      .           
      .                 static _GLIBCXX17_CONSTEXPR const char_type*
      .                 find(const char_type* __s, size_t __n, const char_type& __a)
      .                 {
      .           	if (__n == 0)
      .           	  return 0;
      .           #if __cplusplus >= 201703L
-- line 407 ----------------------------------------
-- line 421 ----------------------------------------
      .           	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
      .           #endif
      .           	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
      .                 }
      .           
      .                 static _GLIBCXX20_CONSTEXPR char_type*
      .                 copy(char_type* __s1, const char_type* __s2, size_t __n)
      .                 {
      8 ( 0.00%)  	if (__n == 0)
      .           	  return __s1;
      .           #if __cplusplus >= 202002L
      .           	if (std::__is_constant_evaluated())
      .           	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
      .           #endif
     11 ( 0.00%)  	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
     32 ( 0.00%)  => ???:0x000000000010b5f0 (2x)
      .                 }
      .           
      .                 static _GLIBCXX20_CONSTEXPR char_type*
      .                 assign(char_type* __s, size_t __n, char_type __a)
      .                 {
      .           	if (__n == 0)
      .           	  return __s;
      .           #if __cplusplus >= 202002L
-- line 443 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/13/bits/stl_numeric.h
--------------------------------------------------------------------------------
Ir               

-- line 132 ----------------------------------------
      .               _GLIBCXX20_CONSTEXPR
      .               inline _Tp
      .               accumulate(_InputIterator __first, _InputIterator __last, _Tp __init)
      .               {
      .                 // concept requirements
      .                 __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
      .                 __glibcxx_requires_valid_range(__first, __last);
      .           
 50,027 ( 0.35%)        for (; __first != __last; ++__first)
125,000 ( 0.87%)  	__init = _GLIBCXX_MOVE_IF_20(__init) + *__first;
      .                 return __init;
      .               }
      .           
      .             /**
      .              *  @brief  Accumulate values in a range with operation.
      .              *
      .              *  Accumulates the values in the range `[first,last)` using the function
      .              *  object `__binary_op`.  The initial value is `__init`.  The values are
-- line 149 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/13/bits/stl_algo.h
--------------------------------------------------------------------------------
Ir               

-- line 5706 ----------------------------------------
      .             template<typename _ForwardIterator, typename _Compare>
      .               _GLIBCXX14_CONSTEXPR
      .               _ForwardIterator
      .               __max_element(_ForwardIterator __first, _ForwardIterator __last,
      .           		  _Compare __comp)
      .               {
      .                 if (__first == __last) return __first;
      .                 _ForwardIterator __result = __first;
150,008 ( 1.05%)        while (++__first != __last)
299,997 ( 2.09%)  	if (__comp(__result, __first))
      .           	  __result = __first;
      .                 return __result;
      .               }
      .           
      .             /**
      .              *  @brief  Return the maximum element in a range.
      .              *  @ingroup sorting_algorithms
      .              *  @param  __first  Start of range.
-- line 5723 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/13/bits/basic_string.h
--------------------------------------------------------------------------------
Ir               

-- line 181 ----------------------------------------
      .                 struct _Alloc_hider : allocator_type // TODO check __is_final
      .                 {
      .           #if __cplusplus < 201103L
      .           	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
      .           	: allocator_type(__a), _M_p(__dat) { }
      .           #else
      .           	_GLIBCXX20_CONSTEXPR
      .           	_Alloc_hider(pointer __dat, const _Alloc& __a)
     18 ( 0.00%)  	: allocator_type(__a), _M_p(__dat) { }
      .           
      .           	_GLIBCXX20_CONSTEXPR
      .           	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
      .           	: allocator_type(std::move(__a)), _M_p(__dat) { }
      .           #endif
      .           
      .           	pointer _M_p; // The actual data.
      .                 };
-- line 197 ----------------------------------------
-- line 210 ----------------------------------------
      .                 _GLIBCXX20_CONSTEXPR
      .                 void
      .                 _M_data(pointer __p)
      .                 { _M_dataplus._M_p = __p; }
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 void
      .                 _M_length(size_type __length)
      7 ( 0.00%)        { _M_string_length = __length; }
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 pointer
      .                 _M_data() const
     14 ( 0.00%)        { return _M_dataplus._M_p; }
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 pointer
      .                 _M_local_data()
      .                 {
      .           #if __cplusplus >= 201103L
      4 ( 0.00%)  	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
      .           #else
      .           	return pointer(_M_local_buf);
      .           #endif
      .                 }
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 const_pointer
      .                 _M_local_data() const
      .                 {
      .           #if __cplusplus >= 201103L
      3 ( 0.00%)  	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
      .           #else
      .           	return const_pointer(_M_local_buf);
      .           #endif
      .                 }
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 void
      .                 _M_capacity(size_type __capacity)
-- line 249 ----------------------------------------
-- line 256 ----------------------------------------
      .           	_M_length(__n);
      .           	traits_type::assign(_M_data()[__n], _CharT());
      .                 }
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 bool
      .                 _M_is_local() const
      .                 {
     16 ( 0.00%)  	if (_M_data() == _M_local_data())
      .           	  {
      .           	    if (_M_string_length > _S_local_capacity)
      .           	      __builtin_unreachable();
      .           	    return true;
      .           	  }
      .           	return false;
      .                 }
      .           
-- line 272 ----------------------------------------
-- line 419 ----------------------------------------
      .                 }
      .           
      .                 // When __n = 1 way faster than the general multichar
      .                 // traits_type::copy/move/assign.
      .                 _GLIBCXX20_CONSTEXPR
      .                 static void
      .                 _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
      .                 {
      8 ( 0.00%)  	if (__n == 1)
      .           	  traits_type::assign(*__d, *__s);
      .           	else
      .           	  traits_type::copy(__d, __s, __n);
      1 ( 0.00%)        }
      .           
      .                 _GLIBCXX20_CONSTEXPR
      .                 static void
      .                 _S_move(_CharT* __d, const _CharT* __s, size_type __n)
      .                 {
      .           	if (__n == 1)
      .           	  traits_type::assign(*__d, *__s);
      .           	else
-- line 439 ----------------------------------------
-- line 616 ----------------------------------------
      .                  *  has no special meaning.
      .                  */
      .                 _GLIBCXX20_CONSTEXPR
      .                 basic_string(const _CharT* __s, size_type __n,
      .           		   const _Alloc& __a = _Alloc())
      .                 : _M_dataplus(_M_local_data(), __a)
      .                 {
      .           	// NB: Not required, but considered best practice.
      2 ( 0.00%)  	if (__s == 0 && __n > 0)
      .           	  std::__throw_logic_error(__N("basic_string: "
      .           				       "construction from null is not valid"));
      .           	_M_construct(__s, __s + __n, std::forward_iterator_tag());
      .                 }
      .           
      .                 /**
      .                  *  @brief  Construct string as copy of a C string.
      .                  *  @param  __s  Source C string.
-- line 632 ----------------------------------------
-- line 637 ----------------------------------------
      .                 // 3076. basic_string CTAD ambiguity
      .                 template<typename = _RequireAllocator<_Alloc>>
      .           #endif
      .                 _GLIBCXX20_CONSTEXPR
      .                 basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
      .                 : _M_dataplus(_M_local_data(), __a)
      .                 {
      .           	// NB: Not required, but considered best practice.
      6 ( 0.00%)  	if (__s == 0)
      .           	  std::__throw_logic_error(__N("basic_string: "
      .           				       "construction from null is not valid"));
      .           	const _CharT* __end = __s + traits_type::length(__s);
      .           	_M_construct(__s, __end, forward_iterator_tag());
      .                 }
      .           
      .                 /**
      .                  *  @brief  Construct string as multiple characters.
-- line 653 ----------------------------------------
-- line 1064 ----------------------------------------
      .           
      .               public:
      .                 // Capacity:
      .                 ///  Returns the number of characters in the string, not including any
      .                 ///  null-termination.
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 size_type
      .                 size() const _GLIBCXX_NOEXCEPT
      2 ( 0.00%)        { return _M_string_length; }
      .           
      .                 ///  Returns the number of characters in the string, not including any
      .                 ///  null-termination.
      .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .                 size_type
      .                 length() const _GLIBCXX_NOEXCEPT
      .                 { return _M_string_length; }
      .           
-- line 1080 ----------------------------------------
-- line 1676 ----------------------------------------
      .                  *  The data is copied, so there is no dependence on @a __s once the
      .                  *  function returns.
      .                  */
      .                 _GLIBCXX20_CONSTEXPR
      .                 basic_string&
      .                 assign(const _CharT* __s)
      .                 {
      .           	__glibcxx_requires_string(__s);
     16 ( 0.00%)  	return _M_replace(size_type(0), this->size(), __s,
  1,242 ( 0.01%)  => ???:0x000000000010b770 (3x)
      .           			  traits_type::length(__s));
      .                 }
      .           
      .                 /**
      .                  *  @brief  Set value to multiple characters.
      .                  *  @param __n  Length of the resulting string.
      .                  *  @param __c  The character to use.
      .                  *  @return  Reference to this string.
-- line 1692 ----------------------------------------
-- line 3723 ----------------------------------------
      .              */
      .             template<typename _CharT, typename _Traits, typename _Alloc>
      .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      .               inline bool
      .               operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      .           	       const _CharT* __rhs)
      .               {
      .                 return __lhs.size() == _Traits::length(__rhs)
200,006 ( 1.39%)  	       && !_Traits::compare(__lhs.data(), __rhs, __lhs.size());
      .               }
      .           
      .           #if __cpp_lib_three_way_comparison
      .             /**
      .              *  @brief  Three-way comparison of a string and a C string.
      .              *  @param __lhs  A string.
      .              *  @param __rhs  A null-terminated string.
      .              *  @return  A value indicating whether `__lhs` is less than, equal to,
-- line 3739 ----------------------------------------
-- line 4029 ----------------------------------------
      .              */
      .             template<typename _CharT, typename _Traits, typename _Alloc>
      .               inline basic_ostream<_CharT, _Traits>&
      .               operator<<(basic_ostream<_CharT, _Traits>& __os,
      .           	       const basic_string<_CharT, _Traits, _Alloc>& __str)
      .               {
      .                 // _GLIBCXX_RESOLVE_LIB_DEFECTS
      .                 // 586. string inserter not a formatted function
     15 ( 0.00%)        return __ostream_insert(__os, __str.data(), __str.size());
    800 ( 0.01%)  => ???:0x000000000010b670 (3x)
      .               }
      .           
      .             /**
      .              *  @brief  Read a line from stream into a string.
      .              *  @param __is  Input stream.
      .              *  @param __str  Buffer to store into.
      .              *  @param __delim  Character marking end of line.
      .              *  @return  Reference to the input stream.
-- line 4045 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: src/sync.cpp
--------------------------------------------------------------------------------
Ir               

      .           #include "sync.h"
      .           #include "config.h"
      .           
      .           void io_benchmark_thread_sync(benchmark_params &params, thread_stats &stats, uint64_t thread_id)
     13 ( 0.00%)  {
      .           
      .               // Generate offsets
      1 ( 0.00%)      std::vector<uint64_t> offsets(params.io);
      .               if (params.seq_or_rand == "seq")
      .               {
400,006 ( 2.79%)          for (uint64_t i = 0; i < params.io; ++i)
      .                   {
400,005 ( 2.79%)              offsets[i] = ((i * params.page_size) + thread_id * params.page_size) % params.device_size;
      .                   }
      .               }
      .               else if (params.seq_or_rand == "rand")
      .               {
      .                   std::mt19937_64 rng(std::random_device{}() + thread_id);
      .                   std::uniform_int_distribution<uint64_t> dist(0, params.total_num_pages - 1);
      .                   for (uint64_t i = 0; i < params.io; ++i)
      .                   {
-- line 21 ----------------------------------------
-- line 26 ----------------------------------------
      .               {
      .                   throw std::runtime_error("Invalid method: " + params.seq_or_rand);
      .               }
      .           
      .           
      .           
      .               // allocate buffer
      .               char *buffer = nullptr;
      5 ( 0.00%)      if (posix_memalign((void **)&buffer, params.page_size, params.page_size) != 0)
    495 ( 0.00%)  => ???:0x000000000010b540 (1x)
      .               {
      .                   throw std::runtime_error("Error allocating buffer: " + std::string(strerror(errno)));
      .               }
      .           
      .               double submission_time = 0;
      .               double completion_time = 0;
      .               // stats.latencies.resize(params.io); // pre-allocate space for latencies
      7 ( 0.00%)      stats.latencies = (uint64_t *)malloc(params.io * sizeof(uint64_t));
    403 ( 0.00%)  => ???:0x000000000010b700 (1x)
      .               memset(stats.latencies, 0, params.io * sizeof(uint64_t));
      .               int max_retries = 5;                                    // Maximum number of retries
      .           
      2 ( 0.00%)      auto start_time = std::chrono::high_resolution_clock::now();
    863 ( 0.01%)  => ???:0x000000000010b470 (1x)
      .           
      .               // if its sequential, use preadv/pwritev but if its random, use pread/pwrite
      .               // since we are using synchronous I/O, we can use pread/pwrite and cap the queue depth to 1
400,006 ( 2.79%)      for (uint64_t i = 0; i < params.io; ++i)
      .               {
      .                   bool success = false;                                   // Flag to indicate if the operation succeeded
200,000 ( 1.39%)          int attempt = 0;                                        // Attempt counter
      .                   // submission_time = get_current_time_ns(); // Record the first submission time
      .           
      .                   while (!success && attempt < max_retries)
      .                   {
      .                       try
      .                       {
      .                           if (params.read_or_write == "write")
      .                           {
      .                               // Write operation
200,000 ( 1.39%)                      ssize_t bytes_written = pwrite(params.fd, buffer, params.page_size, offsets[i]);
6,200,000 (43.23%)  => ???:0x000000000010b4c0 (100,000x)
400,000 ( 2.79%)                      if (bytes_written == params.page_size)
      .                               {
      .                                   success = true; // Mark operation as successful
      .                                   break;
      .                               }
      .                           }
      .                           else
      .                           {
      .                               // Read operation
200,000 ( 1.39%)                      ssize_t bytes_read = pread(params.fd, buffer, params.page_size, offsets[i]);
      .                               if (bytes_read == params.page_size)
      .                               {
      .                                   success = true; // Mark operation as successful
      .                                   break;
      .                               }
      .                           }
      .                       }
      .                       catch (const std::runtime_error &e)
-- line 81 ----------------------------------------
-- line 92 ----------------------------------------
      .                           }
      .                       }
      .                   }
      .                   // Record the completion time after successful operation
      .                   // completion_time = get_current_time_ns();
      .           
      .                   // Calculate latency
      .                   // stats.latencies[i] = completion_time - submission_time;;
100,000 ( 0.70%)          stats.io_completed++;
      .               }
      .           
      1 ( 0.00%)      auto end_time = std::chrono::high_resolution_clock::now();
     31 ( 0.00%)  => ???:0x000000000010b470 (1x)
      1 ( 0.00%)      stats.total_time = std::chrono::duration<double>(end_time - start_time).count();
      .           
      .               // convert latency to microseconds
300,004 ( 2.09%)      for (uint64_t i = 0; i < params.io; ++i)
      .               {
600,002 ( 4.18%)          stats.latencies[i] /= 1000;
      .               }
      .           
      .           
      .               // Free buffer
      2 ( 0.00%)      free(buffer);
    249 ( 0.00%)  => ???:0x000000000010b6a0 (1x)
      7 ( 0.00%)  }
--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./elf/../sysdeps/generic/dl-new-hash.h
  ./elf/../sysdeps/generic/ldsodefs.h
  ./elf/../sysdeps/x86_64/dl-machine.h
  ./elf/./elf/dl-lookup.c
  ./elf/./elf/dl-reloc.c
  ./elf/./elf/dl-runtime.c
  ./elf/./elf/dl-tunables.c
  ./elf/./elf/dl-version.c
  ./elf/./elf/do-rel.h
  ./nptl/../nptl/descr.h
  ./nptl/./nptl/cancellation.c
  ./posix/../sysdeps/unix/sysv/linux/pwrite64.c
  ./string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S
  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S
  ./wcsmbs/./wcsmbs/btowc.c

--------------------------------------------------------------------------------
Ir                 
--------------------------------------------------------------------------------
4,525,277 (31.55%)  events annotated

